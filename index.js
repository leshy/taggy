// Generated by CoffeeScript 1.4.0
(function() {
  var Backbone, _;

  Backbone = require('backbone4000');

  _ = require('underscore');

  exports.Taggy = Backbone.Model.extend4000({
    initialize: function() {
      var collection;
      if (collection = this.get('collection')) {
        return this.collection = collection;
      }
    },
    query: function(tags_yes, tags_no, callback, callbackDone) {
      var posts, query;
      if (tags_yes == null) {
        tags_yes = [];
      }
      if (tags_no == null) {
        tags_no = [];
      }
      query = {};
      if (tags_yes.constructor !== Array) {
        tags_yes = _.keys(tags_yes);
      }
      if (tags_no.constructor !== Array) {
        tags_no = _.keys(tags_no);
      }
      _.map(tags_yes, function(tag) {
        var ret;
        ret = {};
        ret['tags.' + tag] = true;
        return query = ret;
      });
      _.map(tags_no, function(tag) {
        var ret;
        ret = {};
        ret['tags.' + tag] = {
          "$exists": false
        };
        if (query) {
          return query = {
            "$and": [query, ret]
          };
        } else {
          return query = ret;
        }
      });
      posts = [];
      return this.collection.findModels(query, {
        sort: {
          created: -1
        }
      }, callback, callbackDone);
    }
  });

}).call(this);
